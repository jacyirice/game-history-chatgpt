# Generated from ..\antlr\data_story\DataStory.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,106,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,
        5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,
        7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,10,1,10,1,10,5,10,80,8,10,10,10,12,10,83,9,10,1,10,1,10,
        1,11,1,11,1,11,3,11,90,8,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,
        13,1,14,4,14,101,8,14,11,14,12,14,102,1,14,1,14,0,0,15,1,1,3,2,5,
        3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,0,25,0,27,0,29,12,1,
        0,4,2,0,34,34,92,92,8,0,34,34,47,47,92,92,98,98,102,102,110,110,
        114,114,116,116,3,0,48,57,65,70,97,102,3,0,9,10,13,13,32,32,106,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,29,1,0,0,0,1,31,1,0,0,0,3,33,1,0,0,0,5,35,1,0,0,0,7,37,
        1,0,0,0,9,39,1,0,0,0,11,41,1,0,0,0,13,48,1,0,0,0,15,50,1,0,0,0,17,
        60,1,0,0,0,19,67,1,0,0,0,21,76,1,0,0,0,23,86,1,0,0,0,25,91,1,0,0,
        0,27,97,1,0,0,0,29,100,1,0,0,0,31,32,5,91,0,0,32,2,1,0,0,0,33,34,
        5,44,0,0,34,4,1,0,0,0,35,36,5,93,0,0,36,6,1,0,0,0,37,38,5,123,0,
        0,38,8,1,0,0,0,39,40,5,125,0,0,40,10,1,0,0,0,41,42,5,34,0,0,42,43,
        5,114,0,0,43,44,5,111,0,0,44,45,5,108,0,0,45,46,5,101,0,0,46,47,
        5,34,0,0,47,12,1,0,0,0,48,49,5,58,0,0,49,14,1,0,0,0,50,51,5,34,0,
        0,51,52,5,99,0,0,52,53,5,111,0,0,53,54,5,110,0,0,54,55,5,116,0,0,
        55,56,5,101,0,0,56,57,5,110,0,0,57,58,5,116,0,0,58,59,5,34,0,0,59,
        16,1,0,0,0,60,61,5,34,0,0,61,62,5,117,0,0,62,63,5,115,0,0,63,64,
        5,101,0,0,64,65,5,114,0,0,65,66,5,34,0,0,66,18,1,0,0,0,67,68,5,34,
        0,0,68,69,5,115,0,0,69,70,5,121,0,0,70,71,5,115,0,0,71,72,5,116,
        0,0,72,73,5,101,0,0,73,74,5,109,0,0,74,75,5,34,0,0,75,20,1,0,0,0,
        76,81,5,34,0,0,77,80,3,23,11,0,78,80,8,0,0,0,79,77,1,0,0,0,79,78,
        1,0,0,0,80,83,1,0,0,0,81,79,1,0,0,0,81,82,1,0,0,0,82,84,1,0,0,0,
        83,81,1,0,0,0,84,85,5,34,0,0,85,22,1,0,0,0,86,89,5,92,0,0,87,90,
        7,1,0,0,88,90,3,25,12,0,89,87,1,0,0,0,89,88,1,0,0,0,90,24,1,0,0,
        0,91,92,5,117,0,0,92,93,3,27,13,0,93,94,3,27,13,0,94,95,3,27,13,
        0,95,96,3,27,13,0,96,26,1,0,0,0,97,98,7,2,0,0,98,28,1,0,0,0,99,101,
        7,3,0,0,100,99,1,0,0,0,101,102,1,0,0,0,102,100,1,0,0,0,102,103,1,
        0,0,0,103,104,1,0,0,0,104,105,6,14,0,0,105,30,1,0,0,0,5,0,79,81,
        89,102,1,6,0,0
    ]

class DataStoryLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    STRING = 11
    WS = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "','", "']'", "'{'", "'}'", "'\"role\"'", "':'", "'\"content\"'", 
            "'\"user\"'", "'\"system\"'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "STRING", "ESC", "UNICODE", "HEX", 
                  "WS" ]

    grammarFileName = "DataStory.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


